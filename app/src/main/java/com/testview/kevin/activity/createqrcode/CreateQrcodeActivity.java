package com.testview.kevin.activity.createqrcode;

import android.content.Intent;
import android.graphics.Bitmap;
import android.os.Bundle;
import android.util.DisplayMetrics;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;

import com.google.zxing.WriterException;
import com.testview.kevin.R;
import com.testview.kevin.activity.BaseActivity;
import com.testview.kevin.utils.Base64Utils;
import com.testview.kevin.utils.logger.Logger;

import java.util.UUID;


public class CreateQrcodeActivity extends BaseActivity implements View.OnClickListener {

    private EditText restanname;
    private EditText table_id;
    private ImageView prview_image;
    protected int mScreenWidth;
    private Button CreateQR;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.create_qrcode_activity);
        initView();
        addListener();
    }

    private void initView() {
        restanname = (EditText) this.findViewById(R.id.restanname);
        table_id = (EditText) this.findViewById(R.id.table_id);
        CreateQR = (Button) this.findViewById(R.id.CreateQR);
        prview_image = (ImageView) findViewById(R.id.prview_image);
        DisplayMetrics dm = new DisplayMetrics();
        getWindowManager().getDefaultDisplay().getMetrics(dm);
        mScreenWidth = dm.widthPixels;
    }

    private void addListener() {
        CreateQR.setOnClickListener(this);
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        // 取得返回信息
        if (resultCode == RESULT_OK) {
            Bundle bundle = data.getExtras();
            String scanResult = bundle.getString("result");
            restanname.setText(scanResult);
        }
    }

    //生成二维码
    public void createQRCode() {
        Bitmap bitmap;
        String uri = UUID.randomUUID().toString();        //二维码的字符串    桌子的唯一标识  随机生成
        String resname = restanname.getText().toString();        //餐厅名字非界面传参
        String tableid = table_id.getText().toString();        //餐厅名字非界面传参
        try {
            bitmap = CreateQRCodeUtil.getCreateQrCode(uri, 512, resname, tableid);
            if (bitmap != null) {
                String base64 = Base64Utils.base64BitmapToString(bitmap, 100);
                Logger.d(base64);
                String test="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\nxAAAAABJRU5ErkJggg==\n";
                Bitmap img = Base64Utils.base64StringToBitmap(test);
               // Bitmap img = Base64Utils.base64StringToBitmap(base64);
                prview_image.setImageBitmap(img);
            }
        } catch (WriterException e) {
            e.printStackTrace();
        }

    }


    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.CreateQR:
                createQRCode();
                break;
            default:
                break;
        }
    }
}
